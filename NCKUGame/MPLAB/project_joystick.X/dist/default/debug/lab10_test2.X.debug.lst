

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 21 15:17:42 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 18/08/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4520 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _RCREG	set	4014
    62   000000                     _TXREG	set	4013
    63   000000                     _PIE1bits	set	3997
    64   000000                     _SPBRG	set	4015
    65   000000                     _BAUDCONbits	set	4024
    66   000000                     _PIR1bits	set	3998
    67   000000                     _CCP1CON	set	4029
    68   000000                     _ADCON0bits	set	4034
    69   000000                     _ADRESL	set	4035
    70   000000                     _ADRESH	set	4036
    71   000000                     _ADCON1	set	4033
    72   000000                     _ADFM	set	32263
    73   000000                     _ADCON2bits	set	4032
    74   000000                     _CREN	set	32092
    75   000000                     _IRCF0	set	32412
    76   000000                     _IRCF1	set	32413
    77   000000                     _TRISA	set	3986
    78   000000                     _INTCONbits	set	4082
    79   000000                     _TRISCbits	set	3988
    80   000000                     _RCONbits	set	4048
    81   000000                     _RCSTAbits	set	4011
    82   000000                     _TXSTAbits	set	4012
    83   000000                     _IPR1bits	set	3999
    84   000000                     _IRCF2	set	32414
    85                           
    86                           ; #config settings
    87                           
    88                           	psect	cinit
    89   000774                     __pcinit:
    90                           	callstack 0
    91   000774                     start_initialization:
    92                           	callstack 0
    93   000774                     __initialization:
    94                           	callstack 0
    95                           
    96                           ; Clear objects allocated to COMRAM (42 bytes)
    97   000774  EE00  F001         	lfsr	0,__pbssCOMRAM
    98   000778  0E2A               	movlw	42
    99   00077A                     clear_0:
   100   00077A  6AEE               	clrf	postinc0,c
   101   00077C  06E8               	decf	wreg,f,c
   102   00077E  E1FD               	bnz	clear_0
   103   000780                     end_of_initialization:
   104                           	callstack 0
   105   000780                     __end_of__initialization:
   106                           	callstack 0
   107   000780  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   108   000782  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   109   000784  0100               	movlb	0
   110   000786  EFAD  F003         	goto	_main	;jump to C main() function
   111                           
   112                           	psect	bssCOMRAM
   113   000001                     __pbssCOMRAM:
   114                           	callstack 0
   115   000001                     _lenStr:
   116                           	callstack 0
   117   000001                     	ds	2
   118   000003                     _mystring:
   119                           	callstack 0
   120   000003                     	ds	20
   121   000017                     _str:
   122                           	callstack 0
   123   000017                     	ds	20
   124                           
   125                           	psect	cstackCOMRAM
   126   00002B                     __pcstackCOMRAM:
   127                           	callstack 0
   128   00002B                     ?___awmod:
   129                           	callstack 0
   130   00002B                     UART_Write@data:
   131                           	callstack 0
   132   00002B                     ___awmod@dividend:
   133                           	callstack 0
   134                           
   135                           ; 2 bytes @ 0x0
   136   00002B                     	ds	2
   137   00002D                     ___awmod@divisor:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x2
   141   00002D                     	ds	2
   142   00002F                     ___awmod@counter:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x4
   146   00002F                     	ds	1
   147   000030                     ___awmod@sign:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x5
   151   000030                     	ds	1
   152   000031                     
   153                           ; 1 bytes @ 0x6
   154   000031                     	ds	1
   155   000032                     ??_Lo_ISR:
   156                           
   157                           ; 1 bytes @ 0x7
   158   000032                     	ds	5
   159   000037                     
   160                           ; 1 bytes @ 0xC
   161   000037                     	ds	2
   162   000039                     strcpy@dest:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0xE
   166   000039                     	ds	1
   167   00003A                     strcpy@src:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0xF
   171   00003A                     	ds	1
   172   00003B                     strcpy@d:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x10
   176   00003B                     	ds	1
   177   00003C                     
   178                           ; 1 bytes @ 0x11
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   181 ;;
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 15 in file "main.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   198 ;;      Params:         0       0       0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0       0       0
   200 ;;      Temps:          0       0       0       0       0       0       0
   201 ;;      Totals:         0       0       0       0       0       0       0
   202 ;;Total ram usage:        0 bytes
   203 ;; Hardware stack levels required when called: 5
   204 ;; This function calls:
   205 ;;		_GetString
   206 ;;		_SYSTEM_Initialize
   207 ;;		_strcpy
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text0
   214   00075A                     __ptext0:
   215                           	callstack 0
   216   00075A                     _main:
   217                           	callstack 26
   218   00075A                     
   219                           ;main.c: 17:     SYSTEM_Initialize() ;
   220   00075A  ECDB  F003         	call	_SYSTEM_Initialize	;wreg free
   221   00075E                     l1017:
   222                           
   223                           ;main.c: 20:         strcpy(str, GetString());
   224   00075E  0E17               	movlw	low _str
   225   000760  6E39               	movwf	strcpy@dest^0,c
   226   000762  ECEC  F003         	call	_GetString	;wreg free
   227   000766  6E3A               	movwf	strcpy@src^0,c
   228   000768  EC87  F003         	call	_strcpy	;wreg free
   229   00076C  EFAF  F003         	goto	l1017
   230   000770  EF36  F000         	goto	start
   231   000774                     __end_of_main:
   232                           	callstack 0
   233                           
   234 ;; *************** function _strcpy *****************
   235 ;; Defined at:
   236 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;  dest            1   14[COMRAM] PTR unsigned char 
   239 ;;		 -> str(20), 
   240 ;;  src             1   15[COMRAM] PTR const unsigned char 
   241 ;;		 -> mystring(20), 
   242 ;; Auto vars:     Size  Location     Type
   243 ;;  d               1   16[COMRAM] PTR unsigned char 
   244 ;;		 -> str(20), 
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      PTR unsigned char 
   247 ;; Registers used:
   248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   254 ;;      Params:         2       0       0       0       0       0       0
   255 ;;      Locals:         1       0       0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0
   257 ;;      Totals:         3       0       0       0       0       0       0
   258 ;;Total ram usage:        3 bytes
   259 ;; Hardware stack levels used: 1
   260 ;; Hardware stack levels required when called: 3
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269   00070E                     __ptext1:
   270                           	callstack 0
   271   00070E                     _strcpy:
   272                           	callstack 27
   273   00070E  C039  F03B         	movff	strcpy@dest,strcpy@d
   274   000712                     l1001:
   275   000712  2A3A               	incf	strcpy@src^0,f,c
   276   000714  043A               	decf	strcpy@src^0,w,c
   277   000716  6ED9               	movwf	fsr2l,c
   278   000718  6ADA               	clrf	fsr2h,c
   279   00071A  2A3B               	incf	strcpy@d^0,f,c
   280   00071C  043B               	decf	strcpy@d^0,w,c
   281   00071E  6EE1               	movwf	fsr1l,c
   282   000720  6AE2               	clrf	fsr1h,c
   283   000722  CFDF FFE7          	movff	indf2,indf1
   284   000726  50E7               	movf	indf1,w,c
   285   000728  A4D8               	btfss	status,2,c
   286   00072A  EF99  F003         	goto	u201
   287   00072E  EF9B  F003         	goto	u200
   288   000732                     u201:
   289   000732  EF89  F003         	goto	l1001
   290   000736                     u200:
   291   000736  0012               	return		;funcret
   292   000738                     __end_of_strcpy:
   293                           	callstack 0
   294                           
   295 ;; *************** function _SYSTEM_Initialize *****************
   296 ;; Defined at:
   297 ;;		line 60 in file "setting_hardaware/setting.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   311 ;;      Params:         0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; Hardware stack levels required when called: 4
   318 ;; This function calls:
   319 ;;		_ADC_Initialize
   320 ;;		_INTERRUPT_Initialize
   321 ;;		_OSCILLATOR_Initialize
   322 ;;		_UART_Initialize
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text2
   329   0007B6                     __ptext2:
   330                           	callstack 0
   331   0007B6                     _SYSTEM_Initialize:
   332                           	callstack 26
   333   0007B6                     
   334                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
   335   0007B6  ECE4  F003         	call	_OSCILLATOR_Initialize	;wreg free
   336                           
   337                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
   338   0007BA  ECE8  F003         	call	_INTERRUPT_Initialize	;wreg free
   339   0007BE                     
   340                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
   341   0007BE  EC9C  F003         	call	_UART_Initialize	;wreg free
   342   0007C2                     
   343                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
   344   0007C2  ECC5  F003         	call	_ADC_Initialize	;wreg free
   345   0007C6  0012               	return		;funcret
   346   0007C8                     __end_of_SYSTEM_Initialize:
   347                           	callstack 0
   348                           
   349 ;; *************** function _UART_Initialize *****************
   350 ;; Defined at:
   351 ;;		line 7 in file "setting_hardaware/uart.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   365 ;;      Params:         0       0       0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; Hardware stack levels required when called: 3
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_SYSTEM_Initialize
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text3
   380   000738                     __ptext3:
   381                           	callstack 0
   382   000738                     _UART_Initialize:
   383                           	callstack 26
   384   000738                     
   385                           ;setting_hardaware/uart.c: 17:     TRISCbits.RC6 = 1 ;
   386   000738  8C94               	bsf	148,6,c	;volatile
   387                           
   388                           ;setting_hardaware/uart.c: 18:     TRISCbits.RC7 = 1 ;
   389   00073A  8E94               	bsf	148,7,c	;volatile
   390                           
   391                           ;setting_hardaware/uart.c: 21:     TXSTAbits.SYNC = 0;
   392   00073C  98AC               	bcf	172,4,c	;volatile
   393                           
   394                           ;setting_hardaware/uart.c: 22:     BAUDCONbits.BRG16 = 0;
   395   00073E  96B8               	bcf	184,3,c	;volatile
   396                           
   397                           ;setting_hardaware/uart.c: 23:     TXSTAbits.BRGH = 0;
   398   000740  94AC               	bcf	172,2,c	;volatile
   399   000742                     
   400                           ;setting_hardaware/uart.c: 24:     SPBRG = 51;
   401   000742  0E33               	movlw	51
   402   000744  6EAF               	movwf	175,c	;volatile
   403   000746                     
   404                           ;setting_hardaware/uart.c: 27:     RCSTAbits.SPEN = 1;
   405   000746  8EAB               	bsf	171,7,c	;volatile
   406   000748                     
   407                           ;setting_hardaware/uart.c: 28:     RCSTAbits.CREN = 1;
   408   000748  88AB               	bsf	171,4,c	;volatile
   409   00074A                     
   410                           ;setting_hardaware/uart.c: 29:     TXSTAbits.TXEN = 1;
   411   00074A  8AAC               	bsf	172,5,c	;volatile
   412   00074C                     
   413                           ;setting_hardaware/uart.c: 30:     PIR1bits.TXIF = 1;
   414   00074C  889E               	bsf	158,4,c	;volatile
   415   00074E                     
   416                           ;setting_hardaware/uart.c: 31:     PIR1bits.RCIF = 0;
   417   00074E  9A9E               	bcf	158,5,c	;volatile
   418   000750                     
   419                           ;setting_hardaware/uart.c: 32:     IPR1bits.RCIP = 0;
   420   000750  9A9F               	bcf	159,5,c	;volatile
   421   000752                     
   422                           ;setting_hardaware/uart.c: 33:     PIE1bits.RCIE = 1;
   423   000752  8A9D               	bsf	157,5,c	;volatile
   424   000754                     
   425                           ;setting_hardaware/uart.c: 34:     IPR1bits.TXIP = 0;
   426   000754  989F               	bcf	159,4,c	;volatile
   427   000756                     
   428                           ;setting_hardaware/uart.c: 35:     PIE1bits.TXIE = 0;
   429   000756  989D               	bcf	157,4,c	;volatile
   430   000758  0012               	return		;funcret
   431   00075A                     __end_of_UART_Initialize:
   432                           	callstack 0
   433                           
   434 ;; *************** function _OSCILLATOR_Initialize *****************
   435 ;; Defined at:
   436 ;;		line 73 in file "setting_hardaware/setting.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		None
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   450 ;;      Params:         0       0       0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; Hardware stack levels required when called: 3
   457 ;; This function calls:
   458 ;;		Nothing
   459 ;; This function is called by:
   460 ;;		_SYSTEM_Initialize
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text4
   465   0007C8                     __ptext4:
   466                           	callstack 0
   467   0007C8                     _OSCILLATOR_Initialize:
   468                           	callstack 26
   469   0007C8                     
   470                           ;setting_hardaware/setting.c: 75:     IRCF2 = 1;
   471   0007C8  8CD3               	bsf	4051,6,c	;volatile
   472                           
   473                           ;setting_hardaware/setting.c: 76:     IRCF1 = 1;
   474   0007CA  8AD3               	bsf	4051,5,c	;volatile
   475                           
   476                           ;setting_hardaware/setting.c: 77:     IRCF0 = 0;
   477   0007CC  98D3               	bcf	4051,4,c	;volatile
   478   0007CE  0012               	return		;funcret
   479   0007D0                     __end_of_OSCILLATOR_Initialize:
   480                           	callstack 0
   481                           
   482 ;; *************** function _INTERRUPT_Initialize *****************
   483 ;; Defined at:
   484 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		None
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   498 ;;      Params:         0       0       0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 3
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_SYSTEM_Initialize
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text5
   513   0007D0                     __ptext5:
   514                           	callstack 0
   515   0007D0                     _INTERRUPT_Initialize:
   516                           	callstack 26
   517   0007D0                     
   518                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
   519   0007D0  8ED0               	bsf	208,7,c	;volatile
   520                           
   521                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
   522   0007D2  8EF2               	bsf	242,7,c	;volatile
   523                           
   524                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
   525   0007D4  8CF2               	bsf	242,6,c	;volatile
   526   0007D6  0012               	return		;funcret
   527   0007D8                     __end_of_INTERRUPT_Initialize:
   528                           	callstack 0
   529                           
   530 ;; *************** function _ADC_Initialize *****************
   531 ;; Defined at:
   532 ;;		line 3 in file "setting_hardaware/adc.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   546 ;;      Params:         0       0       0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; Hardware stack levels required when called: 3
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_SYSTEM_Initialize
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text6
   561   00078A                     __ptext6:
   562                           	callstack 0
   563   00078A                     _ADC_Initialize:
   564                           	callstack 26
   565   00078A                     
   566                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
   567   00078A  6892               	setf	146,c	;volatile
   568   00078C                     
   569                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
   570   00078C  0E0E               	movlw	14
   571   00078E  6EC1               	movwf	193,c	;volatile
   572   000790                     
   573                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
   574   000790  8EC0               	bsf	4032,7,c	;volatile
   575                           
   576                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
   577   000792  0E07               	movlw	7
   578   000794  12C0               	iorwf	192,f,c	;volatile
   579                           
   580                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
   581   000796  0E00               	movlw	0
   582   000798  6EC4               	movwf	196,c	;volatile
   583                           
   584                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
   585   00079A  0E00               	movlw	0
   586   00079C  6EC3               	movwf	195,c	;volatile
   587   00079E  0012               	return		;funcret
   588   0007A0                     __end_of_ADC_Initialize:
   589                           	callstack 0
   590                           
   591 ;; *************** function _GetString *****************
   592 ;; Defined at:
   593 ;;		line 71 in file "setting_hardaware/uart.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      PTR unsigned char 
   600 ;; Registers used:
   601 ;;		wreg
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   607 ;;      Params:         2       0       0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0
   610 ;;      Totals:         2       0       0       0       0       0       0
   611 ;;Total ram usage:        2 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 3
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text7
   622   0007D8                     __ptext7:
   623                           	callstack 0
   624   0007D8                     _GetString:
   625                           	callstack 27
   626   0007D8                     
   627                           ;setting_hardaware/uart.c: 73:     return mystring;
   628   0007D8  0E03               	movlw	_mystring& (0+255)
   629   0007DA  0012               	return		;funcret
   630   0007DC                     __end_of_GetString:
   631                           	callstack 0
   632                           
   633 ;; *************** function _Lo_ISR *****************
   634 ;; Defined at:
   635 ;;		line 88 in file "setting_hardaware/uart.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0
   651 ;;      Temps:          5       0       0       0       0       0       0
   652 ;;      Totals:         5       0       0       0       0       0       0
   653 ;;Total ram usage:        5 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 2
   656 ;; This function calls:
   657 ;;		_MyusartRead
   658 ;; This function is called by:
   659 ;;		Interrupt level 1
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	intcodelo
   664   000018                     __pintcodelo:
   665                           	callstack 0
   666   000018                     _Lo_ISR:
   667                           	callstack 26
   668                           
   669                           ;incstack = 0
   670   000018  803C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   671   00001A  CFD8 F032          	movff	status,??_Lo_ISR
   672   00001E  CFE8 F033          	movff	wreg,??_Lo_ISR+1
   673   000022  CFE0 F034          	movff	bsr,??_Lo_ISR+2
   674   000026  CFD9 F035          	movff	fsr2l,??_Lo_ISR+3
   675   00002A  CFDA F036          	movff	fsr2h,??_Lo_ISR+4
   676   00002E                     
   677                           ;setting_hardaware/uart.c: 90:     if(PIR1bits.RCIF){
   678   00002E  AA9E               	btfss	158,5,c	;volatile
   679   000030  EF1C  F000         	goto	i1u22_21
   680   000034  EF1E  F000         	goto	i1u22_20
   681   000038                     i1u22_21:
   682   000038  EF2A  F000         	goto	i1l133
   683   00003C                     i1u22_20:
   684   00003C                     
   685                           ;setting_hardaware/uart.c: 91:         if(RCSTAbits.OERR)
   686   00003C  A2AB               	btfss	171,1,c	;volatile
   687   00003E  EF23  F000         	goto	i1u23_21
   688   000042  EF25  F000         	goto	i1u23_20
   689   000046                     i1u23_21:
   690   000046  EF28  F000         	goto	i1l1025
   691   00004A                     i1u23_20:
   692   00004A                     
   693                           ;setting_hardaware/uart.c: 92:             {;setting_hardaware/uart.c: 93:              
      +                             CREN = 0;
   694   00004A  98AB               	bcf	4011,4,c	;volatile
   695                           
   696                           ;setting_hardaware/uart.c: 94:                 __nop();
   697   00004C  0000               	nop	
   698                           
   699                           ;setting_hardaware/uart.c: 95:                 CREN = 1;
   700   00004E  88AB               	bsf	4011,4,c	;volatile
   701   000050                     i1l1025:
   702                           
   703                           ;setting_hardaware/uart.c: 98:         MyusartRead();
   704   000050  EC59  F003         	call	_MyusartRead	;wreg free
   705   000054                     i1l133:
   706   000054  C036  FFDA         	movff	??_Lo_ISR+4,fsr2h
   707   000058  C035  FFD9         	movff	??_Lo_ISR+3,fsr2l
   708   00005C  C034  FFE0         	movff	??_Lo_ISR+2,bsr
   709   000060  C033  FFE8         	movff	??_Lo_ISR+1,wreg
   710   000064  C032  FFD8         	movff	??_Lo_ISR,status
   711   000068  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   712   00006A  0010               	retfie	
   713   00006C                     __end_of_Lo_ISR:
   714                           	callstack 0
   715                           
   716 ;; *************** function _MyusartRead *****************
   717 ;; Defined at:
   718 ;;		line 56 in file "setting_hardaware/uart.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   732 ;;      Params:         0       0       0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0
   734 ;;      Temps:          1       0       0       0       0       0       0
   735 ;;      Totals:         1       0       0       0       0       0       0
   736 ;;Total ram usage:        1 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 1
   739 ;; This function calls:
   740 ;;		_UART_Write
   741 ;;		___awmod
   742 ;; This function is called by:
   743 ;;		_Lo_ISR
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text9
   748   0006B2                     __ptext9:
   749                           	callstack 0
   750   0006B2                     _MyusartRead:
   751                           	callstack 26
   752   0006B2                     
   753                           ;setting_hardaware/uart.c: 59:     mystring[lenStr] = RCREG;
   754   0006B2  5001               	movf	_lenStr^0,w,c
   755   0006B4  0F03               	addlw	low _mystring
   756   0006B6  6ED9               	movwf	fsr2l,c
   757   0006B8  6ADA               	clrf	fsr2h,c
   758   0006BA  CFAE FFDF          	movff	4014,indf2	;volatile
   759                           
   760                           ;setting_hardaware/uart.c: 60:     if (mystring[lenStr] == '\r')
   761   0006BE  5001               	movf	_lenStr^0,w,c
   762   0006C0  0F03               	addlw	low _mystring
   763   0006C2  6ED9               	movwf	fsr2l,c
   764   0006C4  6ADA               	clrf	fsr2h,c
   765   0006C6  0E0D               	movlw	13
   766   0006C8  18DE               	xorwf	postinc2,w,c
   767   0006CA  A4D8               	btfss	status,2,c
   768   0006CC  EF6A  F003         	goto	i1u21_21
   769   0006D0  EF6C  F003         	goto	i1u21_20
   770   0006D4                     i1u21_21:
   771   0006D4  EF6F  F003         	goto	i1l1007
   772   0006D8                     i1u21_20:
   773   0006D8                     
   774                           ;setting_hardaware/uart.c: 61:         UART_Write('\n');
   775   0006D8  0E0A               	movlw	10
   776   0006DA  ECD0  F003         	call	_UART_Write
   777   0006DE                     i1l1007:
   778                           
   779                           ;setting_hardaware/uart.c: 62:     UART_Write(mystring[lenStr]);
   780   0006DE  5001               	movf	_lenStr^0,w,c
   781   0006E0  0F03               	addlw	low _mystring
   782   0006E2  6ED9               	movwf	fsr2l,c
   783   0006E4  6ADA               	clrf	fsr2h,c
   784   0006E6  50DF               	movf	indf2,w,c
   785   0006E8  ECD0  F003         	call	_UART_Write
   786   0006EC                     
   787                           ;setting_hardaware/uart.c: 65:     lenStr++;
   788   0006EC  4A01               	infsnz	_lenStr^0,f,c
   789   0006EE  2A02               	incf	(_lenStr+1)^0,f,c
   790   0006F0                     
   791                           ;setting_hardaware/uart.c: 66:     lenStr %= 10;
   792   0006F0  C001  F02B         	movff	_lenStr,___awmod@dividend
   793   0006F4  C002  F02C         	movff	_lenStr+1,___awmod@dividend+1
   794   0006F8  0E00               	movlw	0
   795   0006FA  6E2E               	movwf	(___awmod@divisor+1)^0,c
   796   0006FC  0E0A               	movlw	10
   797   0006FE  6E2D               	movwf	___awmod@divisor^0,c
   798   000700  EC01  F003         	call	___awmod	;wreg free
   799   000704  C02B  F001         	movff	?___awmod,_lenStr
   800   000708  C02C  F002         	movff	?___awmod+1,_lenStr+1
   801   00070C  0012               	return		;funcret
   802   00070E                     __end_of_MyusartRead:
   803                           	callstack 0
   804                           
   805 ;; *************** function ___awmod *****************
   806 ;; Defined at:
   807 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  dividend        2    0[COMRAM] int 
   810 ;;  divisor         2    2[COMRAM] int 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  sign            1    5[COMRAM] unsigned char 
   813 ;;  counter         1    4[COMRAM] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2    0[COMRAM] int 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   823 ;;      Params:         4       0       0       0       0       0       0
   824 ;;      Locals:         2       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0
   826 ;;      Totals:         6       0       0       0       0       0       0
   827 ;;Total ram usage:        6 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_MyusartRead
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text10
   837   000602                     __ptext10:
   838                           	callstack 0
   839   000602                     ___awmod:
   840                           	callstack 26
   841   000602  0E00               	movlw	0
   842   000604  6E30               	movwf	___awmod@sign^0,c
   843   000606  BE2C               	btfsc	(___awmod@dividend+1)^0,7,c
   844   000608  EF0A  F003         	goto	i1u14_20
   845   00060C  EF08  F003         	goto	i1u14_21
   846   000610                     i1u14_21:
   847   000610  EF10  F003         	goto	i1l967
   848   000614                     i1u14_20:
   849   000614  6C2B               	negf	___awmod@dividend^0,c
   850   000616  1E2C               	comf	(___awmod@dividend+1)^0,f,c
   851   000618  B0D8               	btfsc	status,0,c
   852   00061A  2A2C               	incf	(___awmod@dividend+1)^0,f,c
   853   00061C  0E01               	movlw	1
   854   00061E  6E30               	movwf	___awmod@sign^0,c
   855   000620                     i1l967:
   856   000620  BE2E               	btfsc	(___awmod@divisor+1)^0,7,c
   857   000622  EF17  F003         	goto	i1u15_20
   858   000626  EF15  F003         	goto	i1u15_21
   859   00062A                     i1u15_21:
   860   00062A  EF1B  F003         	goto	i1l971
   861   00062E                     i1u15_20:
   862   00062E  6C2D               	negf	___awmod@divisor^0,c
   863   000630  1E2E               	comf	(___awmod@divisor+1)^0,f,c
   864   000632  B0D8               	btfsc	status,0,c
   865   000634  2A2E               	incf	(___awmod@divisor+1)^0,f,c
   866   000636                     i1l971:
   867   000636  502D               	movf	___awmod@divisor^0,w,c
   868   000638  102E               	iorwf	(___awmod@divisor+1)^0,w,c
   869   00063A  B4D8               	btfsc	status,2,c
   870   00063C  EF22  F003         	goto	i1u16_21
   871   000640  EF24  F003         	goto	i1u16_20
   872   000644                     i1u16_21:
   873   000644  EF48  F003         	goto	i1l987
   874   000648                     i1u16_20:
   875   000648  0E01               	movlw	1
   876   00064A  6E2F               	movwf	___awmod@counter^0,c
   877   00064C  EF2C  F003         	goto	i1l977
   878   000650                     i1l975:
   879   000650  90D8               	bcf	status,0,c
   880   000652  362D               	rlcf	___awmod@divisor^0,f,c
   881   000654  362E               	rlcf	(___awmod@divisor+1)^0,f,c
   882   000656  2A2F               	incf	___awmod@counter^0,f,c
   883   000658                     i1l977:
   884   000658  AE2E               	btfss	(___awmod@divisor+1)^0,7,c
   885   00065A  EF31  F003         	goto	i1u17_21
   886   00065E  EF33  F003         	goto	i1u17_20
   887   000662                     i1u17_21:
   888   000662  EF28  F003         	goto	i1l975
   889   000666                     i1u17_20:
   890   000666                     i1l979:
   891   000666  502D               	movf	___awmod@divisor^0,w,c
   892   000668  5C2B               	subwf	___awmod@dividend^0,w,c
   893   00066A  502E               	movf	(___awmod@divisor+1)^0,w,c
   894   00066C  582C               	subwfb	(___awmod@dividend+1)^0,w,c
   895   00066E  A0D8               	btfss	status,0,c
   896   000670  EF3C  F003         	goto	i1u18_21
   897   000674  EF3E  F003         	goto	i1u18_20
   898   000678                     i1u18_21:
   899   000678  EF42  F003         	goto	i1l983
   900   00067C                     i1u18_20:
   901   00067C  502D               	movf	___awmod@divisor^0,w,c
   902   00067E  5E2B               	subwf	___awmod@dividend^0,f,c
   903   000680  502E               	movf	(___awmod@divisor+1)^0,w,c
   904   000682  5A2C               	subwfb	(___awmod@dividend+1)^0,f,c
   905   000684                     i1l983:
   906   000684  90D8               	bcf	status,0,c
   907   000686  322E               	rrcf	(___awmod@divisor+1)^0,f,c
   908   000688  322D               	rrcf	___awmod@divisor^0,f,c
   909   00068A  2E2F               	decfsz	___awmod@counter^0,f,c
   910   00068C  EF33  F003         	goto	i1l979
   911   000690                     i1l987:
   912   000690  5030               	movf	___awmod@sign^0,w,c
   913   000692  B4D8               	btfsc	status,2,c
   914   000694  EF4E  F003         	goto	i1u19_21
   915   000698  EF50  F003         	goto	i1u19_20
   916   00069C                     i1u19_21:
   917   00069C  EF54  F003         	goto	i1l991
   918   0006A0                     i1u19_20:
   919   0006A0  6C2B               	negf	___awmod@dividend^0,c
   920   0006A2  1E2C               	comf	(___awmod@dividend+1)^0,f,c
   921   0006A4  B0D8               	btfsc	status,0,c
   922   0006A6  2A2C               	incf	(___awmod@dividend+1)^0,f,c
   923   0006A8                     i1l991:
   924   0006A8  C02B  F02B         	movff	___awmod@dividend,?___awmod
   925   0006AC  C02C  F02C         	movff	___awmod@dividend+1,?___awmod+1
   926   0006B0  0012               	return		;funcret
   927   0006B2                     __end_of___awmod:
   928                           	callstack 0
   929                           
   930 ;; *************** function _UART_Write *****************
   931 ;; Defined at:
   932 ;;		line 38 in file "setting_hardaware/uart.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  data            1    wreg     unsigned char 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  data            1    0[COMRAM] unsigned char 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         0       0       0       0       0       0       0
   947 ;;      Locals:         1       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0
   949 ;;      Totals:         1       0       0       0       0       0       0
   950 ;;Total ram usage:        1 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_MyusartRead
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text11
   960   0007A0                     __ptext11:
   961                           	callstack 0
   962   0007A0                     _UART_Write:
   963                           	callstack 26
   964                           
   965                           ;incstack = 0
   966                           ;UART_Write@data stored from wreg
   967   0007A0  6E2B               	movwf	UART_Write@data^0,c
   968   0007A2                     i1l111:
   969   0007A2  A2AC               	btfss	172,1,c	;volatile
   970   0007A4  EFD6  F003         	goto	i1u1_21
   971   0007A8  EFD8  F003         	goto	i1u1_20
   972   0007AC                     i1u1_21:
   973   0007AC  EFD1  F003         	goto	i1l111
   974   0007B0                     i1u1_20:
   975   0007B0                     
   976                           ;setting_hardaware/uart.c: 41:     TXREG = data;
   977   0007B0  C02B  FFAD         	movff	UART_Write@data,4013	;volatile
   978   0007B4  0012               	return		;funcret
   979   0007B6                     __end_of_UART_Write:
   980                           	callstack 0
   981                           
   982                           	psect	smallconst
   983   000600                     __psmallconst:
   984                           	callstack 0
   985   000600  00                 	db	0
   986   000601  00                 	db	0	; dummy byte at the end
   987   000000                     
   988                           	psect	rparam
   989   000000                     
   990                           	psect	temp
   991   00003C                     btemp:
   992                           	callstack 0
   993   00003C                     	ds	1
   994   000000                     int$flags	set	btemp
   995   000000                     wtemp8	set	btemp+1
   996   000000                     ttemp5	set	btemp+1
   997   000000                     ttemp6	set	btemp+4
   998   000000                     ttemp7	set	btemp+8
   999                           
  1000                           	psect	idloc
  1001                           
  1002                           ;Config register IDLOC0 @ 0x200000
  1003                           ;	unspecified, using default values
  1004   200000                     	org	2097152
  1005   200000  FF                 	db	255
  1006                           
  1007                           ;Config register IDLOC1 @ 0x200001
  1008                           ;	unspecified, using default values
  1009   200001                     	org	2097153
  1010   200001  FF                 	db	255
  1011                           
  1012                           ;Config register IDLOC2 @ 0x200002
  1013                           ;	unspecified, using default values
  1014   200002                     	org	2097154
  1015   200002  FF                 	db	255
  1016                           
  1017                           ;Config register IDLOC3 @ 0x200003
  1018                           ;	unspecified, using default values
  1019   200003                     	org	2097155
  1020   200003  FF                 	db	255
  1021                           
  1022                           ;Config register IDLOC4 @ 0x200004
  1023                           ;	unspecified, using default values
  1024   200004                     	org	2097156
  1025   200004  FF                 	db	255
  1026                           
  1027                           ;Config register IDLOC5 @ 0x200005
  1028                           ;	unspecified, using default values
  1029   200005                     	org	2097157
  1030   200005  FF                 	db	255
  1031                           
  1032                           ;Config register IDLOC6 @ 0x200006
  1033                           ;	unspecified, using default values
  1034   200006                     	org	2097158
  1035   200006  FF                 	db	255
  1036                           
  1037                           ;Config register IDLOC7 @ 0x200007
  1038                           ;	unspecified, using default values
  1039   200007                     	org	2097159
  1040   200007  FF                 	db	255
  1041                           
  1042                           	psect	config
  1043                           
  1044                           ; Padding undefined space
  1045   300000                     	org	3145728
  1046   300000  FF                 	db	255
  1047                           
  1048                           ;Config register CONFIG1H @ 0x300001
  1049                           ;	Oscillator Selection bits
  1050                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1051                           ;	Fail-Safe Clock Monitor Enable bit
  1052                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1053                           ;	Internal/External Oscillator Switchover bit
  1054                           ;	IESO = ON, Oscillator Switchover mode enabled
  1055   300001                     	org	3145729
  1056   300001  88                 	db	136
  1057                           
  1058                           ;Config register CONFIG2L @ 0x300002
  1059                           ;	Power-up Timer Enable bit
  1060                           ;	PWRT = OFF, PWRT disabled
  1061                           ;	Brown-out Reset Enable bits
  1062                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1063                           ;	Brown Out Reset Voltage bits
  1064                           ;	BORV = 3, Minimum setting
  1065   300002                     	org	3145730
  1066   300002  1F                 	db	31
  1067                           
  1068                           ;Config register CONFIG2H @ 0x300003
  1069                           ;	Watchdog Timer Enable bit
  1070                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1071                           ;	Watchdog Timer Postscale Select bits
  1072                           ;	WDTPS = 1, 1:1
  1073   300003                     	org	3145731
  1074   300003  00                 	db	0
  1075                           
  1076                           ; Padding undefined space
  1077   300004                     	org	3145732
  1078   300004  FF                 	db	255
  1079                           
  1080                           ;Config register CONFIG3H @ 0x300005
  1081                           ;	CCP2 MUX bit
  1082                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1083                           ;	PORTB A/D Enable bit
  1084                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1085                           ;	Low-Power Timer1 Oscillator Enable bit
  1086                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1087                           ;	MCLR Pin Enable bit
  1088                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1089   300005                     	org	3145733
  1090   300005  83                 	db	131
  1091                           
  1092                           ;Config register CONFIG4L @ 0x300006
  1093                           ;	Stack Full/Underflow Reset Enable bit
  1094                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1095                           ;	Single-Supply ICSP Enable bit
  1096                           ;	LVP = OFF, Single-Supply ICSP disabled
  1097                           ;	Extended Instruction Set Enable bit
  1098                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1099                           ;	Background Debugger Enable bit
  1100                           ;	DEBUG = 0x1, unprogrammed default
  1101   300006                     	org	3145734
  1102   300006  81                 	db	129
  1103                           
  1104                           ; Padding undefined space
  1105   300007                     	org	3145735
  1106   300007  FF                 	db	255
  1107                           
  1108                           ;Config register CONFIG5L @ 0x300008
  1109                           ;	Code Protection bit
  1110                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1111                           ;	Code Protection bit
  1112                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1113                           ;	Code Protection bit
  1114                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1115                           ;	Code Protection bit
  1116                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1117   300008                     	org	3145736
  1118   300008  0F                 	db	15
  1119                           
  1120                           ;Config register CONFIG5H @ 0x300009
  1121                           ;	Boot Block Code Protection bit
  1122                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1123                           ;	Data EEPROM Code Protection bit
  1124                           ;	CPD = OFF, Data EEPROM not code-protected
  1125   300009                     	org	3145737
  1126   300009  C0                 	db	192
  1127                           
  1128                           ;Config register CONFIG6L @ 0x30000A
  1129                           ;	Write Protection bit
  1130                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1131                           ;	Write Protection bit
  1132                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1133                           ;	Write Protection bit
  1134                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1135                           ;	Write Protection bit
  1136                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1137   30000A                     	org	3145738
  1138   30000A  0F                 	db	15
  1139                           
  1140                           ;Config register CONFIG6H @ 0x30000B
  1141                           ;	Configuration Register Write Protection bit
  1142                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1143                           ;	Boot Block Write Protection bit
  1144                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1145                           ;	Data EEPROM Write Protection bit
  1146                           ;	WRTD = OFF, Data EEPROM not write-protected
  1147   30000B                     	org	3145739
  1148   30000B  E0                 	db	224
  1149                           
  1150                           ;Config register CONFIG7L @ 0x30000C
  1151                           ;	Table Read Protection bit
  1152                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1153                           ;	Table Read Protection bit
  1154                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1155                           ;	Table Read Protection bit
  1156                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1157                           ;	Table Read Protection bit
  1158                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1159   30000C                     	org	3145740
  1160   30000C  0F                 	db	15
  1161                           
  1162                           ;Config register CONFIG7H @ 0x30000D
  1163                           ;	Boot Block Table Read Protection bit
  1164                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1165   30000D                     	org	3145741
  1166   30000D  40                 	db	64
  1167                           tosu	equ	0xFFF
  1168                           tosh	equ	0xFFE
  1169                           tosl	equ	0xFFD
  1170                           stkptr	equ	0xFFC
  1171                           pclatu	equ	0xFFB
  1172                           pclath	equ	0xFFA
  1173                           pcl	equ	0xFF9
  1174                           tblptru	equ	0xFF8
  1175                           tblptrh	equ	0xFF7
  1176                           tblptrl	equ	0xFF6
  1177                           tablat	equ	0xFF5
  1178                           prodh	equ	0xFF4
  1179                           prodl	equ	0xFF3
  1180                           indf0	equ	0xFEF
  1181                           postinc0	equ	0xFEE
  1182                           postdec0	equ	0xFED
  1183                           preinc0	equ	0xFEC
  1184                           plusw0	equ	0xFEB
  1185                           fsr0h	equ	0xFEA
  1186                           fsr0l	equ	0xFE9
  1187                           wreg	equ	0xFE8
  1188                           indf1	equ	0xFE7
  1189                           postinc1	equ	0xFE6
  1190                           postdec1	equ	0xFE5
  1191                           preinc1	equ	0xFE4
  1192                           plusw1	equ	0xFE3
  1193                           fsr1h	equ	0xFE2
  1194                           fsr1l	equ	0xFE1
  1195                           bsr	equ	0xFE0
  1196                           indf2	equ	0xFDF
  1197                           postinc2	equ	0xFDE
  1198                           postdec2	equ	0xFDD
  1199                           preinc2	equ	0xFDC
  1200                           plusw2	equ	0xFDB
  1201                           fsr2h	equ	0xFDA
  1202                           fsr2l	equ	0xFD9
  1203                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     17      59
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    sp__GetString	PTR unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 20
		 -> str(COMRAM[20]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 20
		 -> mystring(COMRAM[20]), 


Critical Paths under _main in COMRAM

    _main->_strcpy
    _strcpy->_GetString

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->_MyusartRead
    _MyusartRead->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     225
                          _GetString
                  _SYSTEM_Initialize
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2     225
                                             14 COMRAM     3     1      2
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetString                                            2     0      2       0
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0     463
                                              7 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          1     1      0     463
                                              6 COMRAM     1     1      0
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetString
   _SYSTEM_Initialize
     _ADC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strcpy
     _GetString (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      13        0.0%
BANK5               F4      0       0      14        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     11      3B       1       46.8%
BITBIGSFRl          12      0       0      28        0.0%
BITBIGSFR_1llhl      B      0       0      25        0.0%
BITBIGSFR_1hhl       B      0       0      21        0.0%
BITBIGSFR_5h         A      0       0      15        0.0%
BITBIGSFR_1llhh      8      0       0      24        0.0%
BITBIGSFRhh          7      0       0      26        0.0%
BITBIGSFR_2          6      0       0      19        0.0%
BITBIGSFR_1llhh      4      0       0      23        0.0%
BITBIGSFR_4          3      0       0      17        0.0%
BITBIGSFR_3          3      0       0      18        0.0%
BITBIGSFR_1hhh       2      0       0      20        0.0%
BITBIGSFR_1lh        2      0       0      22        0.0%
BITBIGSFR_5l         2      0       0      16        0.0%
BITBIGSFRhl          1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B      29        0.0%
DATA                 0      0      3B      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 21 15:17:42 2023

                           l33 079E                             l57 07D6                             l74 07C6  
                           l77 07CE                             bsr 0FE0                            l108 0758  
                          l126 07DA                            l821 07D0                            l813 0736  
                          l815 078A                            l823 07C8                            l831 0748  
                          l817 078C                            l841 0752                            l833 074A  
                          l825 0738                            l819 0790                            l843 0754  
                          l835 074C                            l827 0742                            l845 0756  
                          l837 074E                            l829 0746                            l839 0750  
                          l891 07C2                            l887 07B6                            l889 07BE  
                          l995 07D8                            l999 070E                            u200 0736  
                          u201 0732                            _str 0017                   ___awmod@sign 0030  
                          wreg 0FE8                           l1001 0712                           l1015 075A  
                         l1017 075E                           _ADFM 7E07                           _CREN 7D5C  
                         _main 075A                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf1 0FE7                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 003C                           start 006C  
                 ___param_bank 0000               ?_UART_Initialize 002B  __end_of_OSCILLATOR_Initialize 07D0  
                        ?_main 002B                __end_of___awmod 06B2                          _IRCF0 7E9C  
                        _IRCF1 7E9D                          _IRCF2 7E9E                          i1l111 07A2  
                        i1l114 07B4                          i1l123 070C                          i1l133 0054  
                        i1l380 06B0                          i1l847 07A2                          i1l849 07B0  
                        i1l961 0606                          i1l971 0636                          i1l963 0614  
                        i1l981 067C                          i1l973 0648                          i1l965 061C  
                        i1l991 06A8                          i1l983 0684                          i1l975 0650  
                        i1l967 0620                          i1l959 0602                          i1l985 068A  
                        i1l977 0658                          i1l969 062E                          i1l979 0666  
                        i1l987 0690                          i1l989 06A0                          _RCREG 0FAE  
                        _SPBRG 0FAF                          _TRISA 0F92                          _TXREG 0FAD  
                  ?_UART_Write 002B                          ttemp5 003D                          ttemp6 0040  
                        ttemp7 0044                          status 0FD8                          wtemp8 003D  
              __initialization 0774                   __end_of_main 0774                         ??_main 003C  
                __activetblptr 0000                         _ADCON1 0FC1                         _ADRESH 0FC4  
                       _ADRESL 0FC3                         i1l1011 06F0                         i1l1003 06B2  
                       i1l1005 06D8                         i1l1021 003C                         i1l1007 06DE  
                       i1l1023 004A                         i1l1009 06EC                         i1l1025 0050  
                       i1l1019 002E                         i1u1_20 07B0                         i1u1_21 07AC  
                       _Lo_ISR 0018                      ??___awmod 002F                         _lenStr 0001  
                       clear_0 077A                ___awmod@divisor 002D                         isa$std 0001  
              ___awmod@counter 002F                         _strcpy 070E                   __mediumconst 0000  
            _SYSTEM_Initialize 07B6                     __accesstop 0080        __end_of__initialization 0780  
           ?_SYSTEM_Initialize 002B                  ___rparam_used 0001              __end_of_GetString 07DC  
               __pcstackCOMRAM 002B            ??_SYSTEM_Initialize 0037                  ??_MyusartRead 0031  
    __end_of_SYSTEM_Initialize 07C8                        ?_Lo_ISR 002B                        _CCP1CON 0FBD  
                      ?_strcpy 0039                        i1u21_20 06D8                        i1u21_21 06D4  
                 ??_UART_Write 002B                        i1u14_20 0614                        i1u22_20 003C  
                      i1u14_21 0610                        i1u22_21 0038                        i1u15_20 062E  
                      i1u23_20 004A                        i1u15_21 062A                        i1u23_21 0046  
                      i1u16_20 0648                        i1u16_21 0644                        i1u17_20 0666  
                      i1u17_21 0662                        i1u18_20 067C                        i1u18_21 0678  
                      i1u19_20 06A0                        i1u19_21 069C            __end_of_MyusartRead 070E  
                      __Hparam 0000                        __Lparam 0000                        ___awmod 0602  
           __end_of_UART_Write 07B6                   __psmallconst 0600                        __pcinit 0774  
                      __ramtop 0600                        __ptext0 075A                        __ptext1 070E  
                      __ptext2 07B6                        __ptext3 0738                        __ptext4 07C8  
                      __ptext5 07D0                        __ptext6 078A                        __ptext7 07D8  
                      __ptext9 06B2          _OSCILLATOR_Initialize 07C8               ___awmod@dividend 002B  
         end_of_initialization 0780                      _RCSTAbits 0FAB                        postinc0 0FEE  
                      postinc2 0FDE                        strcpy@d 003B                 UART_Write@data 002B  
                    _TRISCbits 0F94                    _MyusartRead 06B2                      _TXSTAbits 0FAC  
               __end_of_Lo_ISR 006C   __end_of_INTERRUPT_Initialize 07D8                      _GetString 07D8  
                  _BAUDCONbits 0FB8                 _ADC_Initialize 078A         ?_OSCILLATOR_Initialize 002B  
               __end_of_strcpy 0738            start_initialization 0774              ??_UART_Initialize 0037  
                     ??_Lo_ISR 0032         __end_of_ADC_Initialize 07A0                     ?_GetString 0037  
                     ??_strcpy 003B                    __pbssCOMRAM 0001                       ?___awmod 002B  
              ?_ADC_Initialize 002B                    __pintcodelo 0018                    __smallconst 0600  
         _INTERRUPT_Initialize 07D0                       _IPR1bits 0F9F                       _PIE1bits 0F9D  
                     _PIR1bits 0F9E                       _RCONbits 0FD0                    ??_GetString 0039  
                   _ADCON0bits 0FC2                     _ADCON2bits 0FC0                   ?_MyusartRead 002B  
        ?_INTERRUPT_Initialize 002B                       __Hrparam 0000                       __Lrparam 0000  
      ??_OSCILLATOR_Initialize 0037                _UART_Initialize 0738                       __ptext10 0602  
                     __ptext11 07A0                     strcpy@dest 0039                       isa$xinst 0000  
                     int$flags 003C                       _mystring 0003                     _INTCONbits 0FF2  
       ??_INTERRUPT_Initialize 0037                       intlevel1 0000                      strcpy@src 003A  
             ??_ADC_Initialize 0037        __end_of_UART_Initialize 075A                     _UART_Write 07A0  
